"""
üìù **Instructions** :
- Installez toutes les biblioth√®ques n√©cessaires en fonction des imports pr√©sents dans le code, utilisez la commande suivante :conda create -n projet python pandas numpy ..........
- Compl√©tez les sections en √©crivant votre code o√π c‚Äôest indiqu√©.
- Ajoutez des commentaires clairs pour expliquer vos choix.
- Utilisez des emoji avec windows + ;
- Interpr√©tez les r√©sultats de vos visualisations (quelques phrases).
"""
# conda create -n projet python pandas numpy matplotlib seaborn streamlit plotly 
# conda activate projet

### 1. Importation des librairies et chargement des donn√©es
import os
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import streamlit as st
import plotly.express as px
import kagglehub
from pathlib import Path
from PIL import Image

#st.set_page_config(layout="wide")
path = kagglehub.dataset_download("arnabchaki/data-science-salaries-2023")

st.sidebar.write("Cr√©√© par : Sergina Bakala et Kiran Derennes",
                "BUT 3 Sciences des Donn√©es - Groupe D",
                "Ann√©e Universitaire 2024-2025")

print("Path to dataset files:", path)
# Chargement des donn√©es
df = pd.read_csv(Path(path) / "ds_salaries.csv")

### 2. Exploration visuelle des donn√©es
#votre code 
st.title("üìä Visualisation des Salaires en Data Science")
st.markdown("Explorez les tendances des salaires √† travers diff√©rentes visualisations interactives.")


if st.checkbox("Afficher un aper√ßu des donn√©es"):
    st.write(df.head(5))


#Statistique g√©n√©rales avec describe pandas 
#votre code 
st.subheader("üìå Statistiques g√©n√©rales ")
if st.checkbox("Afficher les statistiques g√©n√©rales des donn√©es"):
    st.write(df.describe())

### 3. Distribution des salaires en France par r√¥le et niveau d'exp√©rience, uilisant px.box et st.plotly_chart
#votre code 
st.subheader("üìà Distribution des salaires en France")
df_france = df.loc[df["company_location"] == "FR"]
#st.write(df_france.head(5))
fig = px.box(df_france, x="job_title", y="salary_in_usd", color='experience_level')  # Cr√©er un boxplot interactif
st.plotly_chart(fig)
st.write("Interpr√©tation du graphique:")
st.write("""
         Dans ce graphique on peut voir que les employ√©s avec un niveau d'exp√©rience s√©nior ont en moyenne un salaire plus √©lev√© que les employ√©s au niveau entry.
         De plus, les machine learning infrastructure engineers et les machine learning engineers ont une fourchette de salaire similaire entre 75 mille dollards et plus de 100 mille dollards.
         """)

### 4. Analyse des tendances de salaires :
#### Salaire moyen par cat√©gorie : en choisisant une des : ['experience_level', 'employment_type', 'job_title', 'company_location'], utilisant px.bar et st.selectbox 
st.subheader("üìà Analyse des tendances de salaires")
option = st.selectbox("Choisissez une cat√©gorie:",('experience_level', 'employment_type', 'job_title', 'company_location'))
df_salaire_moyen_option = df.groupby(option)["salary_in_usd"].mean().reset_index().sort_values(["salary_in_usd"])
fig=px.bar(df_salaire_moyen_option,x= option, y = "salary_in_usd")

st.plotly_chart(fig)

st.write("Interpr√©tation du graphique:")
st.write("""
         Le graphique ci-dessus confirme l'interpr√©tation du graphique pr√©c√©dent, les employ√©s de niveau s√©nior sont en moyenne mieux pay√© que les employ√©s √† l'entry level.
         Mais les experts sont mieux pay√©s que tous les autres employ√©s en moyenne.
         lors de la s√©l√©ction du filtre sur les types d'employ√©s dans les entreprises, on constate que les employ√©s "FT" sont ceux qui ont un salaire le plus √©lev√© par rapport au "PT"
         """)
### 5. Corr√©lation entre variables
# S√©lectionner uniquement les colonnes num√©riques pour la corr√©lation
numeric_df = df.select_dtypes(include=[np.number])  # S√©lectionner uniquement les colonnes num√©riques
# Calcul de la matrice de corr√©lation
#votre code
matrice = numeric_df.corr()
# Affichage du heatmap avec sns.heatmap
#votre code 
st.subheader("üîó Corr√©lations entre variables num√©riques")
plot = sns.heatmap(matrice, annot=True, cmap='coolwarm')
st.pyplot(plot.get_figure())
st.write("Interpr√©tation du graphique:")
st.write("""
         Ce graphique pr√©sente la corr√©lation entre les diff√©rentes variables du jeu de donn√©es, nous pouvons voir qu'il n'y a pas de corr√©lation de mani√®re globale entre les variables ( car tr√®s √©loign√©s de -1 et 1).
On peut donc dire que les variables √©voluent de mani√®re ind√©pendanteset qu
         """)
### 6. Analyse interactive des variations de salaire
# Une √©volution des salaires pour les 10 postes les plus courants
# count of job titles pour selectionner les postes
# calcule du salaire moyen par an
#utilisez px.line
#votre code 

top10_poste = df.groupby('job_title')['job_title'].count().sort_values(ascending=False).head(10).index
df_top10 = df[df['job_title'].isin(top10_poste)]
df_top10=df_top10.groupby(["work_year","job_title"])["salary_in_usd"].mean().reset_index()
graph_sal_moy_an = px.line(df_top10, x='work_year', y='salary_in_usd', color='job_title')

st.plotly_chart(graph_sal_moy_an.update_layout(xaxis_title="Ann√©e", yaxis_title="Salaires moyen en USD"))
st.write("Interpr√©tation du graphique:")
st.write("""
         Ce graphique pr√©sente l'√©volution du salaire sur plusieurs ann√©es en fonction des jobs titles les plus courant. Il est difficile de d√©celer une tendance globale pour tous les job title.
         Par contre nous pouvons observ√© qu 2021 beaucoup de salaires ont √©t√© baiss√© surement explicable par le virus.
         Mais plus r√©cement le job_title avec le salaire le plus √©l√©v√© est Data science manager, √† l'inverse le data analyste √† un salaire moins √©lev√© que ses paires en moyenne.
         Ce graphique pr√©sente aussi l'apparition de m√©tier en 2021 ou 2022 comme Data architect ou Research engineer.
         """)
### 7. Salaire m√©dian par exp√©rience et taille d'entreprise
# utilisez median(), px.bar
#votre code 
sal_med = df.groupby(["experience_level","company_size"])["salary_in_usd"].median().reset_index()
fig = px.bar(sal_med, x="company_size", y="salary_in_usd", color="experience_level")  # Cr√©er un boxplot interactif
st.plotly_chart(fig)
st.write("Interpr√©tation du graphique:")
st.write("""
         Le graphique ci-dessus pr√©sente la r√©partition des salaires en fonction de la taille de l'entreprise diff√©renti√© par le niveau d'exp√©rience.
         Ainsi les employ√©s d'une entreprise moyenne ont un salaire plus √©lev√© que les employ√©s d'une entreprise plus petite ou grande.
         Les experts ont en moyenne une grande fourchette de salaire compar√© aux autres niveaux d'employ√©s.
         """)

### 8. Ajout de filtres dynamiques
#Filtrer les donn√©es par salaire utilisant st.slider pour selectionner les plages 
#votre code 

salaire = st.slider("Plage de salaire",value = (df["salary_in_usd"].min(), df["salary_in_usd"].max()))
st.write(salaire[0])
df_filtrer_sal = df.loc[df["salary_in_usd"].between(salaire[0],salaire[1])]
st.write(df_filtrer_sal.head(5))
st.write(len(df_filtrer_sal))

### 9.  Impact du t√©l√©travail sur le salaire selon le pays
salaire_pays = df.groupby(["company_location","remote_ratio"])["salary_in_usd"].mean().reset_index()
fig = px.bar(salaire_pays, x = "company_location", y = "salary_in_usd", color= "remote_ratio")
st.plotly_chart(fig)

st.write("Interpr√©tation du graphique:")
st.write("""
         Ce graphique pr√©sente la diff√©rence salariale selon l'action de faire du t√©l√©travail en fonction des pays.
         Les employ√©s d'une entreprise avec un taux de t√©l√©travail plus √©lev√© ont en g√©n√©rale et en moyenne un salaire plus bas que ceux avec un taux de t√©l√©travail bas, 
         par exemple pour le pays 'ID', les employ√©s avec un taux de t√©l√©travail de 100% sont pay√©s en moyenne 119 milles dollards tandis que ceux avec un taux de t√©l√©travail bas sont pay√©s 423 milles dollards. 
         On observe par contre un ph√©nom√®ne contraire dans certains pays d'Europe comme 'FR' o√π la r√©alisation du t√©l√©travail donne droit √† des indmnit√©s ce qui explique pourquoi ce sont cette fois-ci les t√©l√©travailleurs qui sont en moyenne mieux pay√©s que les non-t√©l√©travailleurs.
         """)

### 10. Filtrage avanc√© des donn√©es avec deux st.multiselect, un qui indique "S√©lectionnez le niveau d'exp√©rience" et l'autre "S√©lectionnez la taille d'entreprise"
#votre code 
niveau_xp = st.multiselect("S√©lectionnez le niveau d'exp√©rience", df["experience_level"].unique())
taille_ent = st.multiselect("S√©lectionnez la taille d'entreprise", df["company_size"].unique())
df_filter_xp_ent = df.loc[df["experience_level"].isin(niveau_xp) | df["company_size"].isin(taille_ent)]
st.write(df_filter_xp_ent.head(5))
st.write(len(df_filter_xp_ent))
